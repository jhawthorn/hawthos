#!/usr/bin/env ruby

# Convert a scancode map from linux to a header file
# Example:
#     KEYMAPS=/usr/share/kbd/keymaps/
#     generate-scancode $KEYMAPS/i386/qwerty/us.map.gz $KEYMAPS/i386/include/qwerty-layout.inc

require "zlib"

files = ARGV

name_to_ascii = {
  # number keys
  one:    "1",
  two:    "2",
  three:  "3",
  four:   "4",
  five:   "5",
  six:    "6",
  seven:  "7",
  eight:  "8",
  nine:   "9",
  zero:   "0",

  # Control codes
  Escape: "\e",
  Tab: "\t",
  Return: "\n",
  Delete: 127,

  # Modifiers (ignored for now)
  Alt: nil,
  Caps_Lock: nil,
  Control: nil,
  Shift: nil,

  # Symbols
  minus: "-",
  equal: "=",
  less: "<",
  space: " ",
  semicolon: ";",
  period: ".",
  comma: ",",
  slash: "/",
  backslash: "\\",
  grave: "`",
  apostrophe: "'",
  bracketleft: "[",
  bracketright: "]",
}

(?a..?z).each do |c|
  name_to_ascii[c] = c
end

name_to_ascii.transform_keys!(&:to_s)

code_to_ascii = {}

files.each do |file|
  data = File.read(file)
  data = Zlib.gunzip(data) if file.end_with?(".gz")
  data.scan(/^keycode +(\d+) *= *([^ \n]+)/) do |match|
    code = $1.to_i
    name = $2
    ascii = name_to_ascii.fetch(name) do
      warn "Unknown key: #{name}"
      nil
    end
    next unless ascii

    code_to_ascii[code] = ascii
  end
end

puts "// Generated by #$0"
puts "const char scancode_to_ascii[256] = {"
0.upto(255) do |i|
  ascii = code_to_ascii[i]
  if ascii
    puts "  #{"#{ascii.ord},".ljust(5)} // scancode #{i.to_s.rjust(3)} - #{ascii.inspect}"
  else
    puts "  0,    // scancode #{i.to_s.rjust(3)}"
  end
end
puts "};"
